version: '3.8'

volumes:
  app:
  worker:
  celery-beat:

networks:
  main:

services:
  postgres:
    image: postgres:14.6-alpine
    ports:
      - '5433:5432'
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    networks:
      - main

  redis:
    image: redis
    ports:
      - '6379:6379'
    restart: always
    expose:
      - 6379
    networks:
      - main

  app:
    restart: always
    build:
      context: .
    volumes:
      - ./:/app
    environment:
      DEBUG: "True"
      CELERY_BROKER_URL: "redis://redis:6379/0"
      CELERY_RESULT_BACKEND: "redis://redis:6379/0"
      DJANGO_DB: postgresql
      POSTGRES_HOST: postgres
      POSTGRES_NAME: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_PORT: 5433
    command:
      sh -c "python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
    ports:
      - '8000:8000'
    depends_on:
      - postgres
    networks:
      - main

  worker:
    restart: always
    build:
      context: .
    volumes:
      - ./:/app
    command: [ 'celery',  '-A', 'config', 'worker', '-l' ,'INFO']
    environment:
      DEBUG: "True"
      CELERY_BROKER_URL: "redis://redis:6379/0"
      CELERY_RESULT_BACKEND: "redis://redis:6379/0"
      DJANGO_DB: postgresql
      POSTGRES_HOST: postgres
      POSTGRES_NAME: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_PORT: 5433
    expose:
      - 8000
    depends_on:
      - postgres
      - app
      - redis
    networks:
      - main

  celery-beats:
    restart: always
    build:
      context: .
    volumes:
      - ./:/app

    command: [ 'celery', '-A', 'config', 'beat', '-l', 'INFO', '--scheduler', 'django_celery_beat.schedulers:DatabaseScheduler']
    links:
      - worker
      - redis
    depends_on:
      - postgres
      - app
      - redis
      - worker
    networks:
      - main
